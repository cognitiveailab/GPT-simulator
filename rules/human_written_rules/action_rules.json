{
    "make-campfire": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory\n4. The object must be moveable\n\nturn on/off devices\nDescription: turn on/off a device\nRules:\n1. The device must be activatable\n2. The device must be on to be turned off\n3. The device must be off to be turned on\n\nopen/close containers\nDescription: open/close a container\nRules:\n1. The container must be openable\n2. The container must be closed to be open\n3. The container must be open to be closed\n\nuse:\nDescription: use the device with a patient object\n1. the object must be a device\n2. the object must be in the inventory\n3. When the object is a match, the patient object should be combustible and is not currently on fire, and has not combusted yet. This action will set the patient object on fire.\n4. When the object is an axe, the patient object should be choppable. This action will chop the patient object\n\n\n",
    "volume": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake/put objects:\nDescription: take an object from a container and put it into a container\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. Object must be in the inventory to be put\n2. The container that contains the object or the target container must be open\n\n\nmeasure\nDescription: measure the edge of the object A with object B\nRules:\n1. The edge should be either length, width, or height.\n2. The object B can only be a ruler\n3. The object B should be in the inventory\n4. The object A should have a size property.\n\n\nanswer\nDescription: provide an answer to solve the game\nRules: \n1. The answer should be a number\n2. This action will set the answer_volume with the input number\n\n\n\n\n",
    "boil-water": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\nturn on/off:\nDescription: turn on/off a device\nRules:\n1. The object to be turned on/off must be activatable (isActivatable)\n2. If the object is on (isOn=True), turn on will not change its state while turn off will change it to off (isOn=False).\n3. If the object is off (isOn=False), turn on will change its state to on (isOn=True) while turn off will not change its state.\n\nopen/close:\nDescription: open/close a container\n1. The target must be a container (Container)\n2. The target must be openable (isOpenable)\n3. If the target is not open (isOpen=False), open it will change it to open (isOpen=True) while close it will not change its state.\n4. If the target is open (isOpen=True), open it will not change its state while close it will change it to open (isOpen=True).",
    "hang-painting": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nhang X on Y:\nDescription: hang a picture on a nail\nRules:\n1. X must be a picture (Picture).\n2. The agent must have the picture in its inventory.\n3. Y must be a nail (Nail).\n4. Y must be on the wall.\n5. No other picture is hanged on Y.\n\nhammer X on Y with Z:\nDescription: hammer a nail onto a wall with a hammer\nRules:\n1. X must be a nail (Nail).\n2. Y must be a wall (Wall).\n3. Z must be a hammer (Hammer).\n4. The agent must have X and Z in its inventory.",
    "metal-detector": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory\n4. The object must be moveable\n\nmove:\nDescription: move the agent to a different room based on the direction\nRules:\n1. There is must be a room connect to the current room in the specific direction\n\ndetect:\nDescription: Detect metal with metal detector\nRules:\n1. The tool must be the metal detector\n2. The agent should have the metal detector first\n\ndig:\nDescription: dig a hole on the ground with a tool\nRules:\n1. The agent must have the shovel\n2. The shovel must have non-zero durability",
    "forge-key": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nturn on/off:\nDescription: turn on/off a device\nRules:\n1. The object to be turned on/off must be activatable (isActivatable)\n2. If the object is on (isOn=True), turn on will not change its state while turn off will change it to off (isOn=False).\n3. If the object is off (isOn=False), turn on will change its state to on (isOn=True) while turn off will not change its state.\n\nopen/close X:\nDescription: open/close a container or a door\nRules:\n1. The target must be a container (Container) or a door (Door).\nIf X is a container (Container):\n2. X must be openable (isOpenable)\n3. If X is not open (isOpen=False), open it will change it to open (isOpen=True) while close it will not change its state.\n4. If X is open (isOpen=True), open it will not change its state while close it will change it to open (isOpen=True).\nIf X is a door (Door):\n5. If X is not locked (is_locked=False) and is not opened (is_open=False), open X will make X open (is_open=True)\n6. If X is open (is_open=True), close X will make X closed (is_open=False)\n\npour X into Y:\nDescription: pour liquid into container\nRules:\n1. X must be a substance (Substance).\n2. The state of X must be liquid (stateOfMatter=liquid).\n3. Y must be a liquid container (isLiquidContainer=True).",
    "blood-type": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\ngive object1 to object2\nDescription: give blood to a patient\nRules:\n1. object1 must be blood (Blood).\n2. object2 must be a patient (Patient).\n3. The patient will receive the given blood (given_blood)\n4. if the blood is given, the game ends. If the given blood type is the acceptable to the patient, the agent wins. Otherwise, the agent loses.\n",
    "use-bandage": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must has an parent container\n2. The object can not be combusting\n3. Change the game state by adding the object to the inventory.\n\nput object A into object B:\nDescription: put an object into a container\nRules:\n1. The object B must be a container\n2. The object A must be in your inventory\n3. If it fails, the object A needs to be put back to the original container.\n4. This action will change the gamestate by changing the object A's parent container as the object B.\n\n\nopen/close containers\nDescription: open/close a container\nRules:\n1. The container must be openable\n2. The container must be closed to be open\n3. The container must be open to be closed\n",
    "conductivity": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nconnect X terminal A to Y terminal B:\nDescription: connect two electrical objects X and Y\nRules:\n1. X and Y must be electrical objects (ElectricalObject)\n2. At least one of X and Y should be a wire. You cannot connect to objects without a wire.\n3. Terminal A of X and terminal B of Y will be connected. Anything connected to the two terminals will be disconnected first.",
    "space-walk": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory\n4. The object must be moveable\n\nmove:\nDescription: Move the agent to a room\nRules:\n1. The target must be a room\n2. Agent's current room must be connected to the target room\n3. This action will move the agent to the target room\n\nput on object A:\nDescription: Put object A on the agent\nRules:\n1. The object A must be space suit\n2. This action will change the agent's state of wearSpaceSuit\n\nopen/close door:\nDescription: Open or close the door\nRules:\n1. The object must be a door\n2. This action will change the status of the door\n",
    "wash-clothes": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nwait:\nDescription: do nothing but add one tick\nRules:\n1. This action will add one tick of the environment\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory\n4. The object must be moveable\n\nopen/close containers\nDescription: open/close a container\nRules:\n1. The container must be openable\n2. The container must be closed to be open\n3. The container must be open to be closed\n\n\nturn on/off devices\nDescription: turn on/off a device\nRules:\n1. The device must be activatable\n2. The device must be on to be turned off\n3. The device must be off to be turned on\n\nuse X on Y\nDescription: use the device with a patient object\nRules:\n1. X must be a device\n2. You can add detergent to a washing machine\n",
    "mix-paint": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory\n4. The object must be moveable\n\npour:\nDescription: pour liquid into a container\nRules:\n1. The object must be a liquid\n2. The target must be a liquid container\n3. This action will move the object into the target\n\n\nmix:\nDescription: return the color of the mixed paint\nRules:\n1. The object must be a container\n2. The object must contain two substances to mix\n3. This action can only mix paint\n4. This action will produce paint with new color\n\n\n\n",
    "thermometer": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The object must be in the inventory to be put\n\n\nuse Object A on Object B\nDescription: use the device with a patient object\n1. Object A must be thermometer\n2. The agent needs to have Object A before using it.\n\nanswer\nDescription: provide an answer to solve the game\nRules: \n1. The answer should be a number\n2. This action will set the answer_temperature with the input number\n\n\n\n\n",
    "inclined-plane": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\nactivate/deactivate X\nDescription: activate/deactivate a stopwatch:\nRules:\n1. X must be a stopwatch (Stopwatch)\n2. Activate X will activate X (isActivated=True) if it is not activated (isActivated=False).\n3. Deactivate X will deactivate X (isActivated=False) if it is activated (isActivated=True).\n\n\nreset X\nDescription: reset a stopwatch\nRules:\n1. X must be a stopwatch (Stopwatch).\n2. Reset X will make it deactivated (isActivated=False) and reset its tick to 0 (tick=0).\n\nfocus on X\nDescription: focus on an object",
    "clean-energy": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\nchange region X to powerplant A\nDescription: change the type of powerplant in a region to another type\nRules:\n1. X must be a region (Region)\n2. A must be one of the following powerplant name: solar farm, wind farm, hydroelectric power station, or fossil-fuel power station.\n3. A new power plant (PowerPlant) of name A will be add to region X to replace the existing powerplant in region X.\n4. If the resource in region X matches the resource that powerplant A needs, the effiency of powerplant A will be 1. Otherwise, the efficiency of powerplant A will be 0.1.",
    "volume-stone": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake/put objects:\nDescription: take an object from a container and put it into a container\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. Object must be in the inventory to be put\n2. The container that contains the object or the target container must be open\n\n\npour liquid\nDescription: pour object A into object B\nRules:\n1. This action can only pour water\n2. Object B must be a container, otherwise the water will be poured outside the container\n3. If the volume of object B is smaller than object A, the object B is filled and there are some water left in the current container\n4. If the volume of object B is larger than object A, the target container will take all water\n\nanswer\nDescription: provide an answer to solve the game\nRules: \n1. The answer should be a number\n2. This action will set the answer_volume with the input number\n\n\n\n\n",
    "bird-life-cycle": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nsing:\nDescription: the bird sings\nRules:\n1. This action will not change any game states\n\nsit:\nDescription: the bird sits on an object\nRules:\n1. The bird can only sit on an egg (a bird at egg stage)\n2. Sitting on the egg will set the warm (warm) of the egg to 3\n\nfeed:\nDescription: feed a young bird\nRules:\n1. The bird can only feed a young bird (a bird at young bird stage).\n2. Feed the young bird will set the food (food) of the young bird to 3.\n",
    "scale-weigh": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must moveable.\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The object must be in the inventory\n3. If the container is the scale, you can read the weight of the object\n\nanswer:\nDescription: provide an answer to solve the game\nRules: \n1. The answer should be a number\n2. This action will set the answer_weight with the input number\n\n\n\n\n\n",
    "cooking": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nslice/dice/chop X with Y\nDescription: Prepare an ingredient with knife.\nRules:\n1. X must be an ingredient (Ingredient).\n2. Y must be a knife (Knife).\n3. The agent must have X in its inventory.\n4. The agent must have Y in its inventory.\n5. If X is already been cut (cut=None), the game state will not be changed.\n6. If X is not cut, it will be cut. The cut method is can be (slice, sliced), (dice, diced), or (chop, chopped). X's cut property will be set to one of the cut method based on the action verb.\n7. Preparing an ingredient without following instructions on the cook book will fail the game.\n\ncook X with Y\nDescription: cook an ingredient with a device\nRules:\n1. X must be an ingredient (Ingredient).\n2. Y must be a device (Device).\n3. The agent must have X in its inventory.\n4. If X is cooked (cook is not None), the game state will not change.\n5. If X is not cooked, its cook property will be set based on the type of the device. If the device is a stove, the cook method will be \"fry\". If the device is an oven, the cook method will be \"roast\".\n6. Cooking an ingredient without following instructions on the cook book will fail the game.\n\nread X\nDescription: read a book\nRules:\n1. X must be a cook book (CookBook).\n2. The agent must have the cook book in its inventory.\n3. This action will not change any game state.\n\nprepare meal\nDescription: Prepare the meal when all ingredients are prepared\n1. If all ingredients are prepared following the cook book's instructions, and all ingredients are in the agent's inventory, then the agent wins the game. Otherwise, no game state will be changed.\n\n\n\n",
    "lit-lightbulb": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory\n4. The object must be moveable\n\nconnect:\nDescription: connect two object with input terminals\nRules:\n1. At least one of the objects should be a wire or a multimeter\n2. Disconnect terminal if the terminal is already connect to other objects",
    "make-ice-cubes": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory\n4. The object must be moveable\n\nturn on/off devices\nDescription: turn on/off a device\nRules:\n1. The device must be activatable\n2. The device must be on to be turned off\n3. The device must be off to be turned on\n\nopen/close containers\nDescription: open/close a container\nRules:\n1. The container must be openable\n2. The container must be closed to be open\n3. The container must be open to be closed\n\nuse:\nDescription: use the device with a patient object\n1. the object must be a device\n\neat:\nDescription: eat food\nRules:\n1. the object must be in the inventory\n2. the object must be food\n3. if the food is in a container, the container must be open\n\n\n\n\n",
    "plant-tree": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory\n4. The object must be moveable\n\nturn on/off devices:\nDescription: turn on/off a device\nRules:\n1. The device must be activatable\n2. The device must be on to be turned off\n3. The device must be off to be turned on\n\ndig with tool:\nDescription: dig a hole on the ground with a tool\nRules:\n1. The agent must have the shovel\n2. This action will generate a hole and put some soil to the agent's inventory\n\npour water into water container:\nDescription: pour water into a container\nRules:\n1. The container must be able to hold the water\n2. The water can make soil wet",
    "take-photo": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The object must be in the inventory to be put\n\n\nopen/close containers\nDescription: open/close a container\nRules:\n1. The container must be openable\n2. The container must be closed to be open\n3. The container must be open to be closed\n\n\nturn on/off devices\nDescription: turn on/off a device\nRules:\n1. The device must be activatable\n2. The device must be on to be turned off\n3. The device must be off to be turned on\n\n\nfocus Object A\nDescription: change camera focus to Object A\nRules: \n1. Object A can not be the camera itself\n2. Change camera's current focus to Object A\n\nrotate dials\nDescription: Rotate one dial on the camera\nRules:\n1. Rotate the dial clockwise if clockwise is True\n2. Dail can only be aperture, iso, or shutter speed\n\npress shutter\nDescription: Press the shutter and take a photo\nRules:\n1. By pressing the shutter, a photo will be taken with the current camera setting and the main object is the object in focus.\n\n\n",
    "sweep-floor": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The object must be in the inventory to be put\n\n\nsweep \nDescription: sweep garbage to dustpan with broom\nRules:\n1. the dustpan and broom must be with the agent\n2. the garbage must not be in any container\n3. the action will put garbage in dustpan\n\ndump \nDescription: dump dustpan to garbage can\n1. the garbage can must be a container\n2. the garbage can must be open\n3. the dustpan must have garbage\n4. the action will empty the dustpan and put garbage into the garbage can\n\n\n\n",
    "balance-scale-heaviest": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states",
    "dishwasher": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\nturn on/off:\nDescription: turn on/off a device\nRules:\n1. The object to be turned on/off must be activatable (isActivatable)\n2. If the object is on (isOn=True), turn on will not change its state while turn off will change it to off (isOn=False).\n3. If the object is off (isOn=False), turn on will change its state to on (isOn=True) while turn off will not change its state.\n\nopen/close:\nDescription: open/close a container\n1. The target must be a container (Container)\n2. The target must be openable (isOpenable)\n3. If the target is not open (isOpen=False), open it will change it to open (isOpen=True) while close it will not change its state.\n4. If the target is open (isOpen=True), open it will not change its state while close it will change it to open (isOpen=True).\n\nuse X on Y:\nDescription: Use a device on a target.\nRules:\n1. X must be a device (isDevice=True)\n2. In this game, a dish soap bottle (DishSoapBottle) is the only usable device. Some soap will be add to Y if Y is a dish (Dish) or a dishwasher (DishWasher).\n\neat X with Y:\nDescription: eat a food with a clean dish\nRules:\n1. The agent must have X in its inventory.\n2. Y must be a dish (Dish).\n3. Y must be clean (isDirty=False).\n4. X must be a food (Food).\n5. Taking this action will make Y dirty (isDirty=True) and add food mess (foodMessName=X.name) to Y.",
    "volume-container": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake/put objects:\nDescription: take an object from a container and put it into a container\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. Object must be in the inventory to be put\n2. The container that contains the object or the target container must be open\n\n\npour liquid\nDescription: pour object A into object B\nRules:\n1. This action can only pour water\n2. Object B must be a container, otherwise the water will be poured outside the container\n3. If the volume of object B is smaller than object A, the object B is filled and there are some water left in the current container\n4. If the volume of object B is larger than object A, the target container will take all water\n\nanswer\nDescription: provide an answer to solve the game\nRules: \n1. The answer should be a number\n2. This action will set the answer_volume with the input number\n\n\n\n\n\n",
    "balance-scale-weigh": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nanswer:\nDescription: answers the weight of the object to test\nRules:\n1. Game ends if this action is taken.\n2. Game won if the answer matches the weight of the object to test. Otherwise the agent loses the game.\n",
    "refrigerate-food": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory\n4. The object must be moveable\n\nopen/close containers:\nDescription: open/close a container\nRules:\n1. The container must be openable\n2. The container must be closed to be open\n3. The container must be open to be closed\n\n\nturn on/off devices:\nDescription: turn on/off a device\nRules:\n1. The device must be activatable\n2. The device must be on to be turned off\n3. The device must be off to be turned on\n\nuse X on Y:\nDescription: use the device with a patient object\n1. X must be a device\n2. You can add detergent to a washing machine\n\n\n\n\n",
    "multimeter": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory\n4. The object must be moveable\n\nset:\nDescription: change the mode of the multimeter\nRules:\n1. This action can only set the model of the multimeter\n2. Only voltage, current, and resistance are valid modes\n3. This action will change the model of the multimeter object\n\nconnect:\nDescription: connect two object with input terminals\nRules:\n1. At least one of the objects should be a wire or a multimeter\n2. Disconnect terminal if the terminal is already connect to other objects\n\nanswer:\nDescription: provide an answer to solve the game\nRules: \n1. The answer should be a number\n2. This action will set the answer_volume with the input number",
    "bath-tub-water-temperature": "take:\nDescription: take an object and put it into the inventory\nRules:\n1. Objects must be moveable (isMoveable) to be taken\n2. The container that contains the object must be open\n\nput:\nDescription: put an object into a target container\nRules:\n1. The target must be a container (Container)\n2. The target container must be open\n3. The object must be in the inventory\n4. The object must be moveable (isMoveable)\n\nlook:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nturn on/off:\nDescription: turn on/off a device\nRules:\n1. The object to be turned on/off must be activatable (isActivatable)\n2. If the object is on (isOn=True), turn on will not change its state while turn off will change it to off (isOn=False).\n3. If the object is off (isOn=False), turn on will change its state to on (isOn=True) while turn off will not change its state.\n\nuse:\nDescription: use object1 on object2\nRules:\n1. object1 has to be useable (isUsable)\n2. A thermometer can be used to test the temperature. This will not change the game state.\n\nbath:\nDescription: Take a bath\nRules:\n1. This action will end the game immediately.\n2. If the water temperature is within 35 - 40 degree Ceilsius, the agent wins. Otherwise, the agent loses.\n",
    "sunburn": "look:\nDescription: show the current observation\nRules:\n1. This action will not change any game states\n\ninventory:\nDescription: show the current items in the inventory\nRules:\n1. This action will not change any game states\n\nexamine:\nDescription: examine the object\nRules:\n1. This action will not change any game states\n\ntake objects:\nDescription: take an object from a container\nRules:\n1. The object must have a parent container\n2. The object must be moveable\n3. If there is a parent container, the container must be open\n\nput objects:\nDescription: put an object into a container\nRules:\n1. The destination object must be a container\n2. The container must be open\n3. The object must be in the inventory to be put\n4. The object must be moveable\n\nmove:\nDescription: Move the agent to a room\nRules:\n1. The target must be a room\n2. Agent's current room must be connected to the target room\n3. This action will move the agent to the target room\n\n\nuse object A:\nDescription: Use object A on the agent\nRules:\n1. The object A must be usable\n2. If the object A is sunscreen, change agent's use_sunscreen property to true\n\n\n"
}